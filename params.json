{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","tagline":"Propel Geocodable Behavior","body":"GeocodableBehavior\r\n==================\r\n\r\n[![Build Status](https://secure.travis-ci.org/willdurand/GeocodableBehavior.png)](http://travis-ci.org/willdurand/GeocodableBehavior)\r\n\r\nThe **GeocodableBehavior** helps you build geo-aware applications. It automatically\r\ngeocodes your models when they are saved, giving you the ability to search by\r\nlocation and calculate distances between records.\r\n\r\nThis behavior uses [Geocoder](https://github.com/willdurand/Geocoder), the\r\nGeocoder PHP 5.3 library and requires [Propel](http://github.com/propelorm/Propel)\r\n1.6.4-dev and above.\r\n\r\nInstallation\r\n------------\r\n\r\nCherry-pick the `GeocodableBehavior.php` file is `src/`, put it somewhere,\r\nthen add the following line to your `propel.ini` or `build.properties`\r\nconfiguration file:\r\n\r\n``` ini\r\npropel.behavior.geocodable.class = path.to.GeocodableBehavior\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nJust add the following XML tag in your `schema.xml` file:\r\n\r\n``` xml\r\n<behavior name=\"geocodable\" />\r\n```\r\n\r\nBasically, the behavior will add:\r\n\r\n* two new columns to your model (`latitude` and `longitude`);\r\n* four new methods to the _ActiveRecord_ API (`getDistanceTo()`, `isGeocoded()`,\r\n`getCoordinates()`, and `setCoordinates()`);\r\n* two new methods to the _ActiveQuery_ API (`filterByDistanceFrom()`,\r\n`filterNear()`).\r\n\r\n\r\n### ActiveRecord API ###\r\n\r\n`getDistanceTo()` returns the distance between the current object and a given one.\r\nThe method takes two arguments:\r\n\r\n* a geocoded object;\r\n* a measure unit (`KILOMETERS_UNIT`, `MILES_UNIT`, or `NAUTICAL_MILES_UNIT`\r\ndefined in the `Peer` class of the geocoded model).\r\n\r\n`isGeocoded()` returns a boolean value whether the object has been geocoded,\r\nor not.\r\n\r\n`getCoordinates()`, `setCoordinates()` allows to quickly set/get latitude,\r\nand longitude values.\r\n\r\n\r\n### ActiveQuery API ###\r\n\r\n`filterByDistanceFrom()` takes five arguments:\r\n\r\n* a latitude value;\r\n* a longitude value;\r\n* a distance value;\r\n* a measure unit (`KILOMETERS_UNIT`, `MILES_UNIT`, or `NAUTICAL_MILES_UNIT`\r\ndefined in the `Peer` class of the geocoded model);\r\n* a comparison sign (`Criteria::LESS_THAN` is the default value).\r\n\r\nIt will add a filter by distance on your current query and returns itself for\r\nfluid interface.\r\n\r\n`filterNear` takes three arguments:\r\n\r\n* a model object;\r\n* a distance value;\r\n* a measure unit (`KILOMETERS_UNIT`, `MILES_UNIT`, or `NAUTICAL_MILES_UNIT`\r\ndefined in the `Peer` class of the geocoded model).\r\n\r\n\r\nAutomatic Geocoding\r\n-------------------\r\n\r\nAt this step, you have to fill in the two columns (`latitude` and `longitude`)\r\nyourself. It's not really useful, right ?\r\n\r\nAutomatic geocoding to the rescue! There are two automatic ways to get geocoded\r\ninformation:\r\n\r\n* using IP addresses;\r\n* using street addresses.\r\n\r\nIt provides a `geocode()` method that autoupdate the loaction values.\r\nTo prevent autofill when modified, just set `auto_update` attribute to false.\r\n\r\nThis method returns a [`ResultInterface`](https://github.com/willdurand/Geocoder/blob/master/src/Geocoder/Result/ResultInterface.php)\r\nobject, so you can override this method to fill in more fields depending on your\r\nmodel:\r\n\r\n``` php\r\n<?php\r\n\r\nclass MyObject extends BaseMyObject\r\n{\r\n    // ...\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    public function geocode()\r\n    {\r\n        if (null !== $result = parent::geocode()) {\r\n            if ($city = $result->getCity()) {\r\n                $this->setCity($city);\r\n            }\r\n        }\r\n\r\n        return $result;\r\n    }\r\n}\r\n```\r\n\r\nNote: You can use both at the same time.\r\n\r\n### IP-Based Geocoding ###\r\n\r\nTo enable the IP-Based geocoding, add the following configuration in your\r\n`schema.xml` file:\r\n\r\n``` xml\r\n<behavior name=\"geocodable\">\r\n    <parameter name=\"geocode_ip\" value=\"true\" />\r\n    <parameter name=\"geocoder_api_key\" value=\"<API_KEY>\" />\r\n    <parameter name=\"geocoder_api_key_provider\" value=\"<API_KEY_PROVIDER>\" />\r\n</behavior>\r\n```\r\n\r\nThe `geocoder_api_key_provider` can be either a static method returning the api\r\nkey. A class method in the format `class()->method()` or\r\n`class()->method()->subMethod()`, or a class implementing `getGoogleMapsKey`\r\nwhich must return the key.\r\n\r\nBy default, the default Geocoder `provider` is `YahooProvider` so you'll need to\r\nfill in an API key.\r\n\r\nIf you want to use another provider, you'll need to set a new parameter:\r\n\r\n``` xml\r\n<parameter name=\"geocoder_provider\" value=\"\\Geocoder\\Provider\\HostIpProvider\" />\r\n```\r\n\r\nRead the **Geocoder** documentation to know more about providers.\r\n\r\nThis configuration will add a new column to your model: `ip_address`.\r\nYou can change the name of this column using the following parameter:\r\n\r\n``` xml\r\n<parameter name=\"ip_column\" value=\"ip\" />\r\n```\r\n\r\nThe behavior will now use the `ip_address` value to populate the `latitude`,and\r\n`longitude` columns thanks to **Geocoder**.\r\n\r\n\r\n### Address-Based GeocodingÂ ###\r\n\r\nTo enable the Address-Based geocoding, add the following configuration:\r\n\r\n``` xml\r\n<behavior name=\"geocodable\">\r\n    <parameter name=\"geocode_address\" value=\"true\" />\r\n    <parameter name=\"geocoder_api_key\" value=\"<API_KEY>\" />\r\n</behavior>\r\n```\r\n\r\nBy default, the default Geocoder `provider` is `YahooProvider` so you'll need to\r\nfill in an API key but keep in mind it's an optional parameter depending on the\r\nprovider you choose.\r\n\r\nIf you want to use another provider, you'll need to set a new parameter:\r\n\r\n``` xml\r\n<parameter name=\"geocoder_provider\" value=\"\\Geocoder\\Provider\\GoogleMapsProvider\" />\r\n```\r\n\r\nRead the **Geocoder** documentation to know more about providers.\r\n\r\nBasically, the behavior looks for attributes called street, locality, region,\r\nfpostal_code, and country. It tries to make a complete address with them.\r\nAs usual, you can tweak this parameter to add your own list of attributes that\r\nrepresents a complete street address:\r\n\r\n``` xml\r\n<parameter name=\"address_columns\" value=\"street,locality,region,postal_code,country\" />\r\n```\r\n\r\nThese parameters will be concatened and separated by a comma to make a street\r\naddress. This address will be used to get `latitude` and `longitude` values.\r\n\r\nNow, each time you save your object, the two columns `latitude`, and `longitude`\r\nare populated thanks to **Geocoder**.\r\n\r\n\r\nHTTP Adapters\r\n-------------\r\n\r\n**Geocoder** provides HTTP adapters which can be configured through the behavior.\r\nBy default, this behavior uses the `CurlHttpAdapter`.\r\n\r\nIf you want to use another `adapter`, you'll need to use the following parameter:\r\n\r\n``` xml\r\n<parameter name=\"geocoder_adapter\" value=\"\\Geocoder\\HttpAdapter\\BuzzHttpAdapter\" />\r\n```\r\n\r\nRead the **Geocoder** documentation to know more about adapters.\r\n\r\n\r\nParameters\r\n----------\r\n\r\n```xml\r\n<behavior name=\"geocodable\">\r\n    <parameter name=\"auto_update\" value=\"true\" />\r\n\r\n    <parameter name=\"latitude_column\" value=\"latitude\" />\r\n    <parameter name=\"longitude_column\" value=\"longitude\" />\r\n\r\n    <!-- IP-Based Geocoding -->\r\n    <parameter name=\"geocode_ip\" value=\"false\" />\r\n    <parameter name=\"ip_column\" value=\"ip_address\" />\r\n\r\n    <!-- Address-Based Geocoding -->\r\n    <parameter name=\"geocode_address\" value=\"false\" />\r\n    <parameter name=\"address_columns\" value=\"street,locality,region,postal_code,country\" />\r\n\r\n    <!-- Geocoder -->\r\n    <parameter name=\"geocoder_provider\" value=\"\\Geocoder\\Provider\\YahooProvider\" />\r\n    <parameter name=\"geocoder_adapter\" value=\"\\Geocoder\\HttpAdapter\\CurlHttpAdapter\" />\r\n    <parameter name=\"geocoder_api_key\" value=\"false\" />\r\n    <parameter name=\"geocoder_api_key_provider\" value=\"false\" />\r\n</behavior>\r\n```\r\n\r\nThis is the default configuration.\r\n\r\n\r\nCredits\r\n-------\r\n\r\nWilliam Durand <william.durand1@gmail.com>\r\n\r\n\r\nLinks\r\n-----\r\n\r\n[https://github.com/collectiveidea/acts_as_geocodable](https://github.com/collectiveidea/acts_as_geocodable)\r\n","name":"Geocodablebehavior"}